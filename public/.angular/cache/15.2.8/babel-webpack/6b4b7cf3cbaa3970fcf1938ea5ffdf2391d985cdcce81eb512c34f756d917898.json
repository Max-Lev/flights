{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass UserToken {}\nexport class Permissions {\n  canLoadChildren(user, id, segments) {\n    debugger;\n    return false;\n  }\n}\nPermissions.ɵfac = function Permissions_Factory(t) {\n  return new (t || Permissions)();\n};\nPermissions.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Permissions,\n  factory: Permissions.ɵfac\n});\nexport class CanMatchGuard {\n  constructor(permissions, currentUser) {\n    this.permissions = permissions;\n    this.currentUser = currentUser;\n  }\n  canMatch(route, segments) {\n    debugger;\n    return this.permissions.canLoadChildren(this.currentUser, 'route', segments);\n  }\n}\nCanMatchGuard.ɵfac = function CanMatchGuard_Factory(t) {\n  return new (t || CanMatchGuard)(i0.ɵɵinject(Permissions), i0.ɵɵinject(UserToken));\n};\nCanMatchGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CanMatchGuard,\n  factory: CanMatchGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAIA,MAAMA,SAAS;AAEf,OAAM,MAAOC,WAAW;EACtBC,eAAe,CAACC,IAAe,EAAEC,EAAU,EAAEC,QAAsB;IACjE;IACA,OAAO,KAAK;EACd;;AAJWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAK,SAAXL,WAAW;AAAA;AAWxB,OAAM,MAAOM,aAAa;EACxBC,YAAoBC,WAAwB,EAAUC,WAAsB;IAAxD,gBAAW,GAAXD,WAAW;IAAuB,gBAAW,GAAXC,WAAW;EAEjE;EACAC,QAAQ,CAACC,KAAY,EAAEP,QAAsB;IAC3C;IACA,OAAO,IAAI,CAACI,WAAW,CAACP,eAAe,CAAC,IAAI,CAACQ,WAAW,EAAE,OAAO,EAAEL,QAAQ,CAAC;EAC9E;;AAPWE,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAD,SAAbC,aAAa;EAAAM,YAFZ;AAAM","names":["UserToken","Permissions","canLoadChildren","user","id","segments","factory","CanMatchGuard","constructor","permissions","currentUser","canMatch","route","providedIn"],"sourceRoot":"","sources":["/Users/MaxLevtov/Projects/flights/public/src/app/dashboard/guards/can-match.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanMatch, Route, RouterStateSnapshot, UrlSegment, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nclass UserToken { }\n@Injectable()\nexport class Permissions {\n  canLoadChildren(user: UserToken, id: string, segments: UrlSegment[]): boolean {\n    debugger;\n    return false;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanMatchGuard implements CanMatch {\n  constructor(private permissions: Permissions, private currentUser: UserToken) {\n\n  }\n  canMatch(route: Route, segments: UrlSegment[]): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    debugger;\n    return this.permissions.canLoadChildren(this.currentUser, 'route', segments);\n  }\n  \n  // canActivate(\n  //   route: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  //   return true;\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}