{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { combineLatest, startWith } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"primeng/slider\";\nimport * as i3 from \"primeng/dropdown\";\nconst _c0 = [\"dd\"];\nexport class CalculatorContainerComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.cities = [{\n      name: 'New York',\n      code: 'NY'\n    }, {\n      name: 'Rome',\n      code: 'RM'\n    }, {\n      name: 'London',\n      code: 'LDN'\n    }, {\n      name: 'Istanbul',\n      code: 'IST'\n    }, {\n      name: 'Paris',\n      code: 'PRS'\n    }];\n    this.formGroup = this.formBuilder.group({\n      range: new FormControl(0),\n      size: new FormControl(0)\n    });\n  }\n  ngAfterViewInit() {\n    const range$ = this.formGroup.controls['range'].valueChanges.pipe(startWith(0));\n    const size$ = this.formGroup.controls['size'].valueChanges.pipe(startWith(0));\n    combineLatest({\n      range$,\n      size$\n    }).subscribe(value => {\n      console.log(value);\n    });\n    console.log(this.dd);\n  }\n  click(city) {\n    console.log(city);\n  }\n}\nCalculatorContainerComponent.ɵfac = function CalculatorContainerComponent_Factory(t) {\n  return new (t || CalculatorContainerComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nCalculatorContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CalculatorContainerComponent,\n  selectors: [[\"app-calculator-container\"]],\n  viewQuery: function CalculatorContainerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dd = _t.first);\n    }\n  },\n  decls: 8,\n  vars: 3,\n  consts: [[3, \"formGroup\"], [\"formControlName\", \"range\"], [\"formControlName\", \"size\"], [\"optionLabel\", \"name\", 3, \"options\", \"ngModel\", \"onClick\", \"ngModelChange\"], [\"dd\", \"\"]],\n  template: function CalculatorContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\");\n      i0.ɵɵelement(2, \"p-slider\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\");\n      i0.ɵɵelement(4, \"p-slider\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\")(6, \"p-dropdown\", 3, 4);\n      i0.ɵɵlistener(\"onClick\", function CalculatorContainerComponent_Template_p_dropdown_onClick_6_listener() {\n        return ctx.click(ctx.selectedCity);\n      })(\"ngModelChange\", function CalculatorContainerComponent_Template_p_dropdown_ngModelChange_6_listener($event) {\n        return ctx.selectedCity = $event;\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"options\", ctx.cities)(\"ngModel\", ctx.selectedCity);\n    }\n  },\n  dependencies: [i2.Slider, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.FormGroupDirective, i1.FormControlName, i3.Dropdown],\n  styles: [\"[_nghost-%COMP%]   form[_ngcontent-%COMP%] {\\n  width: 500px;\\n  border: 1px solid #ccc;\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n  height: 100px;\\n  place-content: space-evenly;\\n  align-self: center;\\n  align-content: center;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FsY3VsYXRvci9jYWxjdWxhdG9yLWNvbnRhaW5lci9jYWxjdWxhdG9yLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLFlBQUE7RUFDQSxzQkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLDJCQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUtBLFlBQUE7QUFKUiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICBmb3JtIHtcbiAgICAgICAgd2lkdGg6IDUwMHB4O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgcGxhY2UtY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgLy8gbGVmdDogY2FsYyg1MCUgLSAyNTBweCk7XG4gICAgICAgIC8vIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgLy8gbGVmdDogNTAlO1xuICAgICAgICAvLyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,WAAW,QAAmB,gBAAgB;AAEpE,SAA+BC,aAAa,EAAwBC,SAAS,QAAa,MAAM;;;;;;AAUhG,OAAM,MAAOC,4BAA4B;EAgBvCC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAV/B,WAAM,GAAW,CACf;MAAEC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAI,CAAE,EAChC;MAAED,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAI,CAAE,EAC5B;MAAED,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAK,CAAE,EAC/B;MAAED,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAK,CAAE,EACjC;MAAED,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAK,CAAE,CAC/B;IAMC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,KAAK,EAAE,IAAIV,WAAW,CAAC,CAAC,CAAC;MACzBW,IAAI,EAAE,IAAIX,WAAW,CAAC,CAAC;KACxB,CAAC;EAEJ;EAEAY,eAAe;IACb,MAAMC,MAAM,GAAG,IAAI,CAACL,SAAS,CAACM,QAAQ,CAAC,OAAO,CAAC,CAACC,YAAY,CAACC,IAAI,CAACd,SAAS,CAAC,CAAC,CAAC,CAAC;IAC/E,MAAMe,KAAK,GAAG,IAAI,CAACT,SAAS,CAACM,QAAQ,CAAC,MAAM,CAAC,CAACC,YAAY,CAACC,IAAI,CAACd,SAAS,CAAC,CAAC,CAAC,CAAC;IAE7ED,aAAa,CAAC;MAAEY,MAAM;MAAEI;IAAK,CAAE,CAAC,CAACC,SAAS,CAAEC,KAAwC,IAAI;MACtFC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,EAAE,CAAC;EAEtB;EAEAC,KAAK,CAACC,IAAU;IACdJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;EACnB;;AAvCWrB,4BAA4B;mBAA5BA,4BAA4B;AAAA;AAA5BA,4BAA4B;QAA5BA,4BAA4B;EAAAsB;EAAAC;IAAA;;;;;;;;;;;;;MCbzCC,+BAA8B;MAEtBA,8BAA6C;MACjDA,iBAAM;MACNA,2BAAK;MACDA,8BAA4C;MAChDA,iBAAM;MAGVA,2BAAK;MAGDA;QAAA,OAAWC,2BAAmB;MAAA,EAAC;QAAA;MAAA;MACkCD,iBAAa;;;MAb5EA,yCAAuB;MAazBA,eAAkB;MAAlBA,oCAAkB","names":["FormControl","combineLatest","startWith","CalculatorContainerComponent","constructor","formBuilder","name","code","formGroup","group","range","size","ngAfterViewInit","range$","controls","valueChanges","pipe","size$","subscribe","value","console","log","dd","click","city","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["/Users/MaxLevtov/Projects/flights/public/src/app/calculator/calculator-container/calculator-container.component.ts","/Users/MaxLevtov/Projects/flights/public/src/app/calculator/calculator-container/calculator-container.component.html"],"sourcesContent":["import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Dropdown } from 'primeng/dropdown';\nimport { Observable, Observer, combineLatest, filter, forkJoin, of, startWith, tap } from 'rxjs';\ninterface City {\n  name: string;\n  code: string;\n}\n@Component({\n  selector: 'app-calculator-container',\n  templateUrl: './calculator-container.component.html',\n  styleUrls: ['./calculator-container.component.scss']\n})\nexport class CalculatorContainerComponent implements AfterViewInit {\n\n  formGroup: FormGroup;\n\n  selectedCity: City;\n\n  cities: City[] = [\n    { name: 'New York', code: 'NY' },\n    { name: 'Rome', code: 'RM' },\n    { name: 'London', code: 'LDN' },\n    { name: 'Istanbul', code: 'IST' },\n    { name: 'Paris', code: 'PRS' }\n  ];\n\n  @ViewChild('dd') dd: Dropdown;\n\n  constructor(private formBuilder: FormBuilder) {\n\n    this.formGroup = this.formBuilder.group({\n      range: new FormControl(0),\n      size: new FormControl(0)\n    })\n\n  }\n\n  ngAfterViewInit(): void {\n    const range$ = this.formGroup.controls['range'].valueChanges.pipe(startWith(0));\n    const size$ = this.formGroup.controls['size'].valueChanges.pipe(startWith(0));\n\n    combineLatest({ range$, size$ }).subscribe((value: { range$: number, size$: number }) => {\n      console.log(value)\n    });\n\n    console.log(this.dd);\n\n  }\n\n  click(city: City) {\n    console.log(city)\n  }\n\n}\n","<form [formGroup]=\"formGroup\">\n    <div>\n        <p-slider formControlName=\"range\"></p-slider>\n    </div>\n    <div>\n        <p-slider formControlName=\"size\"></p-slider>\n    </div>\n</form>\n\n<div>\n\n    <p-dropdown #dd \n    (onClick)=\"click(selectedCity)\"\n    [options]=\"cities\" [(ngModel)]=\"selectedCity\" optionLabel=\"name\"></p-dropdown>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}