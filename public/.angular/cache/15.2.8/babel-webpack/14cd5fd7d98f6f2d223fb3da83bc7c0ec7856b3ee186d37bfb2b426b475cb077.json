{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../providers/workers.service\";\nexport class DashboardResolver {\n  constructor(workersService) {\n    this.workersService = workersService;\n  }\n  resolve(route, state) {\n    return this.workersService.getWorkerFlights();\n  }\n}\nDashboardResolver.ɵfac = function DashboardResolver_Factory(t) {\n  return new (t || DashboardResolver)(i0.ɵɵinject(i1.WorkersService));\n};\nDashboardResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DashboardResolver,\n  factory: DashboardResolver.ɵfac\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;EAElC;EAEAC,OAAO,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,OAAO,IAAI,CAACH,cAAc,CAACI,gBAAgB,EAAE;EAC/C;;AARWN,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAO,SAAjBP,iBAAiB;AAAA","names":["DashboardResolver","constructor","workersService","resolve","route","state","getWorkerFlights","factory"],"sourceRoot":"","sources":["/Users/MaxLevtov/Projects/flights/public/src/app/dashboard/resolvers/dashboard.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { WorkersService } from '../providers/workers.service';\n\n@Injectable()\nexport class DashboardResolver implements Resolve<any> {\n\n  constructor(private workersService: WorkersService) {\n\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n    return this.workersService.getWorkerFlights();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}