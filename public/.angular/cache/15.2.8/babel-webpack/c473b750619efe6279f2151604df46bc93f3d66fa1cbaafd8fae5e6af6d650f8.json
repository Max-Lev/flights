{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject, map, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"primeng/table\";\nfunction FlightsComponent_ng_template_2_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", col_r4.header, \" \");\n  }\n}\nfunction FlightsComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, FlightsComponent_ng_template_2_th_1_Template, 2, 1, \"th\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const columns_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r2);\n  }\n}\nfunction FlightsComponent_ng_template_3_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r9 = ctx.$implicit;\n    const rowData_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", rowData_r5[col_r9.field], \" \");\n  }\n}\nfunction FlightsComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵtemplate(1, FlightsComponent_ng_template_3_td_1_Template, 2, 1, \"td\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rowData_r5 = ctx.$implicit;\n    const columns_r6 = ctx.columns;\n    i0.ɵɵproperty(\"pSelectableRow\", rowData_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r6);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"min-width\": \"50rem\"\n  };\n};\nexport class FlightsComponent {\n  constructor() {\n    this.columns = [];\n    this.selectedFlightEmitter = new EventEmitter();\n    this.sub$ = new Subject();\n  }\n  ngOnInit() {\n    this.getDefaultFlight();\n  }\n  ngOnChanges(changes) {\n    this.getDefaultFlight();\n  }\n  ngOnDestroy() {\n    this.sub$.next(true);\n    this.sub$.unsubscribe();\n  }\n  getDefaultFlight() {\n    this.flights$.pipe(map(flight => flight[0])).pipe(takeUntil(this.sub$)).subscribe(flight => {\n      this.selectedFlight = flight;\n      this.selectedFlightEmitter.emit(flight);\n    });\n  }\n  onRowSelect(flight) {\n    this.selectedFlightEmitter.emit(flight);\n  }\n}\nFlightsComponent.ɵfac = function FlightsComponent_Factory(t) {\n  return new (t || FlightsComponent)();\n};\nFlightsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlightsComponent,\n  selectors: [[\"app-flights-list\"]],\n  inputs: {\n    flights$: \"flights$\",\n    columns: \"columns\"\n  },\n  outputs: {\n    selectedFlightEmitter: \"selectedFlightEmitter\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 7,\n  consts: [[\"selectionMode\", \"single\", 3, \"columns\", \"value\", \"selection\", \"tableStyle\", \"selectionChange\", \"onRowSelect\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [4, \"ngFor\", \"ngForOf\"], [3, \"pSelectableRow\"]],\n  template: function FlightsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0);\n      i0.ɵɵlistener(\"selectionChange\", function FlightsComponent_Template_p_table_selectionChange_0_listener($event) {\n        return ctx.selectedFlight = $event;\n      })(\"onRowSelect\", function FlightsComponent_Template_p_table_onRowSelect_0_listener() {\n        return ctx.onRowSelect(ctx.selectedFlight);\n      });\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, FlightsComponent_ng_template_2_Template, 2, 1, \"ng-template\", 1);\n      i0.ɵɵtemplate(3, FlightsComponent_ng_template_3_Template, 2, 2, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"columns\", ctx.columns)(\"value\", i0.ɵɵpipeBind1(1, 4, ctx.flights$))(\"selection\", ctx.selectedFlight)(\"tableStyle\", i0.ɵɵpureFunction0(6, _c0));\n    }\n  },\n  dependencies: [i1.NgForOf, i2.PrimeTemplate, i3.Table, i3.SelectableRow, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AAAA,SAEEA,YAAY,QACP,eAAe;AACtB,SAAqBC,OAAO,EAAEC,GAAG,EAAEC,SAAS,QAAQ,MAAM;;;;;;;ICC9CC,0BAAgC;IAC5BA,YACJ;IAAAA,iBAAK;;;;IADDA,eACJ;IADIA,8CACJ;;;;;IAHJA,0BAAI;IACAA,6EAEK;IACTA,iBAAK;;;;IAHmBA,eAAU;IAAVA,oCAAU;;;;;IAO9BA,0BAAgC;IAC5BA,YACJ;IAAAA,iBAAK;;;;;IADDA,eACJ;IADIA,yDACJ;;;;;IAHJA,6BAA+B;IAC3BA,6EAEK;IACTA,iBAAK;;;;;IAJDA,2CAA0B;IACNA,eAAU;IAAVA,oCAAU;;;;;;;;ADE1C,OAAM,MAAOC,gBAAgB;EAN7BC;IAYW,YAAO,GAAiB,EAAE;IAEzB,0BAAqB,GAA0B,IAAIN,YAAY,EAAE;IAE3E,SAAI,GAAqB,IAAIC,OAAO,EAAW;;EAE/CM,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAC,WAAW,CAACC,OAAsB;IAChC,IAAI,CAACF,gBAAgB,EAAE;EACzB;EAEAG,WAAW;IACT,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;IACpB,IAAI,CAACD,IAAI,CAACE,WAAW,EAAE;EACzB;EAEAN,gBAAgB;IACd,IAAI,CAACO,QAAQ,CAACC,IAAI,CAACd,GAAG,CAAEe,MAAiB,IAAKA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,IAAI,CAACb,SAAS,CAAC,IAAI,CAACS,IAAI,CAAC,CAAC,CACjFM,SAAS,CAAED,MAAe,IAAI;MAC7B,IAAI,CAACE,cAAc,GAAGF,MAAM;MAC5B,IAAI,CAACG,qBAAqB,CAACC,IAAI,CAACJ,MAAM,CAAC;IACzC,CAAC,CAAC;EACN;EAEAK,WAAW,CAACL,MAAe;IACzB,IAAI,CAACG,qBAAqB,CAACC,IAAI,CAACJ,MAAM,CAAC;EACzC;;AAnCWZ,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAkB;EAAAC;IAAAT;IAAAU;EAAA;EAAAC;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd7B3B,kCAEwF;MADxFA;QAAA;MAAA,EAA8B;QAAA,OACX4B,mCAA2B;MAAA,EADhB;;MAE1B5B,iFAMc;MACdA,iFAMc;MAClBA,iBAAU;;;MAjBDA,qCAAmB","names":["EventEmitter","Subject","map","takeUntil","i0","FlightsComponent","constructor","ngOnInit","getDefaultFlight","ngOnChanges","changes","ngOnDestroy","sub$","next","unsubscribe","flights$","pipe","flight","subscribe","selectedFlight","selectedFlightEmitter","emit","onRowSelect","selectors","inputs","columns","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/MaxLevtov/Projects/flights/public/src/app/dashboard/components/flights/flights.component.ts","/Users/MaxLevtov/Projects/flights/public/src/app/dashboard/components/flights/flights.component.html"],"sourcesContent":["import {\n  ChangeDetectionStrategy, Component,\n  EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges\n} from '@angular/core';\nimport { Observable, Subject, map, takeUntil } from 'rxjs';\nimport { IFlight, IFlightCol } from '../models/flights.model';\n\n\n@Component({\n  selector: 'app-flights-list',\n  templateUrl: './flights.component.html',\n  styleUrls: ['./flights.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FlightsComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Input() flights$: Observable<IFlight[]>;\n\n  selectedFlight: IFlight;\n\n  @Input() columns: IFlightCol[] = [];\n\n  @Output() selectedFlightEmitter: EventEmitter<IFlight> = new EventEmitter();\n\n  sub$: Subject<boolean> = new Subject<boolean>();\n\n  ngOnInit(): void {\n    this.getDefaultFlight();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getDefaultFlight();\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.next(true);\n    this.sub$.unsubscribe();\n  }\n\n  getDefaultFlight() {\n    this.flights$.pipe(map((flight: IFlight[]) => flight[0])).pipe(takeUntil(this.sub$))\n      .subscribe((flight: IFlight) => {\n        this.selectedFlight = flight;\n        this.selectedFlightEmitter.emit(flight);\n      });\n  }\n\n  onRowSelect(flight: IFlight) {\n    this.selectedFlightEmitter.emit(flight);\n  }\n\n\n\n}\n","<p-table [columns]=\"columns\" [value]=\"(flights$ | async)!\" \n[(selection)]=\"selectedFlight\" selectionMode=\"single\"\n    (onRowSelect)=\"onRowSelect(selectedFlight)\" [tableStyle]=\"{ 'min-width': '50rem' }\">\n    <ng-template pTemplate=\"header\" let-columns>\n        <tr>\n            <th *ngFor=\"let col of columns\">\n                {{ col.header }}\n            </th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-rowIndex=\"rowIndex\">\n        <tr [pSelectableRow]=\"rowData\">\n            <td *ngFor=\"let col of columns\">\n                {{ rowData[col.field] }}\n            </td>\n        </tr>\n    </ng-template>\n</p-table>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}