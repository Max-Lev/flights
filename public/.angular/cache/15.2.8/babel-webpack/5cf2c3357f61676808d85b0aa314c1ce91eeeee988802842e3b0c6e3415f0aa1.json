{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CanLoadGuard {\n  canActivate(route, state) {\n    debugger;\n    return false;\n  }\n}\nCanLoadGuard.ɵfac = function CanLoadGuard_Factory(t) {\n  return new (t || CanLoadGuard)();\n};\nCanLoadGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CanLoadGuard,\n  factory: CanLoadGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,YAAY;EACvBC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IACxB;IACF,OAAO,KAAK;EACd;;AANWH,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAI,SAAZJ,YAAY;EAAAK,YAFX;AAAM","names":["CanLoadGuard","canActivate","route","state","factory","providedIn"],"sourceRoot":"","sources":["/Users/MaxLevtov/Projects/flights/public/src/app/dashboard/guards/can-load.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanLoadGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      debugger;\n    return false;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}